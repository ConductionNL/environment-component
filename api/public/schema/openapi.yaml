openapi: 3.0.2
info:
  title: 'Environment Component'
  version: V.0.1
  description: |
    API Details
    - Component: Environment Component
    - Reference: evc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/proto-component) / [zip](https://github.com/ConductionNL/proto-component/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/evc-php) 
    - Datamodel: [postman](/schema/evc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /clusters:
    get:
      tags:
        - Cluster
      operationId: getClusterCollection
      summary: 'Retrieves the collection of Cluster resources.'
      responses:
        200:
          description: 'Cluster collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Cluster:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Cluster:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[provider]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[configurations]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[providerId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[kubeconfig]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[ip]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[token]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateConfigured]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[releases]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateConfigured[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateConfigured[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateConfigured[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateConfigured[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Cluster
      operationId: postClusterCollection
      summary: 'Creates a Cluster resource.'
      responses:
        201:
          description: 'Cluster resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Cluster-read'
          links:
            GetClusterItem:
              parameters:
                id: '$response.body#/id'
              operationId: getClusterItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /clusters/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Cluster:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Cluster:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Cluster-write'
        description: 'The new Cluster resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/clusters/{id}':
    get:
      tags:
        - Cluster
      operationId: getClusterItem
      summary: 'Retrieves a Cluster resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Cluster resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Cluster-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Cluster
      operationId: putClusterItem
      summary: 'Replaces the Cluster resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Cluster resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Cluster-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Cluster:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Cluster:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Cluster-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Cluster-write'
        description: 'The updated Cluster resource'
    delete:
      tags:
        - Cluster
      operationId: deleteClusterItem
      summary: 'Removes the Cluster resource.'
      responses:
        204:
          description: 'Cluster resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/clusters/{id}/audit_trail':
    get:
      tags:
        - Cluster
      operationId: get_audit_trailClusterItem
      summary: 'Retrieves a Cluster resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Cluster resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Cluster-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/clusters/{id}/change_log':
    get:
      tags:
        - Cluster
      operationId: get_change_logsClusterItem
      summary: 'Retrieves a Cluster resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Cluster resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Cluster:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cluster-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Cluster-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /components:
    get:
      tags:
        - Component
      operationId: getComponentCollection
      summary: 'Retrieves the collection of Component resources.'
      responses:
        200:
          description: 'Component collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Component:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Component:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
      parameters:
        -
          name: core
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[code]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[githubRepository]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[githubToken]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[helmRepository]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[core]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: code
          in: query
          required: false
          schema:
            type: string
        -
          name: 'code[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: githubRepository
          in: query
          required: false
          schema:
            type: string
        -
          name: 'githubRepository[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: githubToken
          in: query
          required: false
          schema:
            type: string
        -
          name: 'githubToken[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: helmRepository
          in: query
          required: false
          schema:
            type: string
        -
          name: 'helmRepository[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: core
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'core[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Component
      operationId: postComponentCollection
      summary: 'Creates a Component resource.'
      responses:
        201:
          description: 'Component resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
          links:
            GetComponentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getComponentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /components/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Component:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Component:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Component-write'
        description: 'The new Component resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/components/{id}':
    get:
      tags:
        - Component
      operationId: getComponentItem
      summary: 'Retrieves a Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Component resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Component
      operationId: putComponentItem
      summary: 'Replaces the Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Component resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Component:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Component:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Component-write'
        description: 'The updated Component resource'
    delete:
      tags:
        - Component
      operationId: deleteComponentItem
      summary: 'Removes the Component resource.'
      responses:
        204:
          description: 'Component resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/components/{id}/audit_trail':
    get:
      tags:
        - Component
      operationId: get_audit_trailComponentItem
      summary: 'Retrieves a Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Component resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/components/{id}/change_log':
    get:
      tags:
        - Component
      operationId: get_change_logsComponentItem
      summary: 'Retrieves a Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Component resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/components/{id}/install':
    get:
      tags:
        - Component
      operationId: helm_installComponentItem
      summary: 'Retrieves a Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Component resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/components/{id}/update':
    get:
      tags:
        - Component
      operationId: helm_updateComponentItem
      summary: 'Retrieves a Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Component resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Component:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /domains:
    get:
      tags:
        - Domain
      operationId: getDomainCollection
      summary: 'Retrieves the collection of Domain resources.'
      responses:
        200:
          description: 'Domain collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Domain:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Domain:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[location]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: cluster.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'cluster.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Domain
      operationId: postDomainCollection
      summary: 'Creates a Domain resource.'
      responses:
        201:
          description: 'Domain resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Domain-read'
          links:
            GetDomainItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDomainItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /domains/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Domain:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Domain:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Domain-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Domain-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Domain-write'
        description: 'The new Domain resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/domains/{id}':
    get:
      tags:
        - Domain
      operationId: getDomainItem
      summary: 'Retrieves a Domain resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Domain resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Domain-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Domain
      operationId: putDomainItem
      summary: 'Replaces the Domain resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Domain resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Domain-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Domain:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Domain:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Domain-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Domain-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Domain-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Domain-write'
        description: 'The updated Domain resource'
    delete:
      tags:
        - Domain
      operationId: deleteDomainItem
      summary: 'Removes the Domain resource.'
      responses:
        204:
          description: 'Domain resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/domains/{id}/audit_trail':
    get:
      tags:
        - Domain
      operationId: get_audit_trailDomainItem
      summary: 'Retrieves a Domain resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Domain resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Domain-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/domains/{id}/change_log':
    get:
      tags:
        - Domain
      operationId: get_change_logsDomainItem
      summary: 'Retrieves a Domain resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Domain resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Domain:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Domain-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Domain-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /environments:
    get:
      tags:
        - Environment
      operationId: getEnvironmentCollection
      summary: 'Retrieves the collection of Environment resources.'
      responses:
        200:
          description: 'Environment collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Environment:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Environment:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[debug]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[cache]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[web]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[authorization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: cluster.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'cluster.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Environment
      operationId: postEnvironmentCollection
      summary: 'Creates a Environment resource.'
      responses:
        201:
          description: 'Environment resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-read'
          links:
            GetEnvironmentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEnvironmentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /environments/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Environment:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Environment:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Environment-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Environment-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Environment-write'
        description: 'The new Environment resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/environments/{id}':
    get:
      tags:
        - Environment
      operationId: getEnvironmentItem
      summary: 'Retrieves a Environment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Environment resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Environment
      operationId: putEnvironmentItem
      summary: 'Replaces the Environment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Environment resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Environment:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Environment:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Environment-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Environment-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Environment-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Environment-write'
        description: 'The updated Environment resource'
    delete:
      tags:
        - Environment
      operationId: deleteEnvironmentItem
      summary: 'Removes the Environment resource.'
      responses:
        204:
          description: 'Environment resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/environments/{id}/audit_trail':
    get:
      tags:
        - Environment
      operationId: get_audit_trailEnvironmentItem
      summary: 'Retrieves a Environment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Environment resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/environments/{id}/change_log':
    get:
      tags:
        - Environment
      operationId: get_change_logsEnvironmentItem
      summary: 'Retrieves a Environment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Environment resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/environments/{id}/update':
    get:
      tags:
        - Environment
      operationId: helm_updateEnvironmentItem
      summary: 'Retrieves a Environment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Environment resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Environment:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Environment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /health_logs:
    get:
      tags:
        - HealthLog
      operationId: getHealthLogCollection
      summary: 'Retrieves the collection of HealthLog resources.'
      responses:
        200:
          description: 'HealthLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/HealthLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/HealthLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthLog-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[code]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: code
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'code[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - HealthLog
      operationId: postHealthLogCollection
      summary: 'Creates a HealthLog resource.'
      responses:
        201:
          description: 'HealthLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
          links:
            GetHealthLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getHealthLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /health_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/HealthLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/HealthLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
        description: 'The new HealthLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/health_logs/{id}':
    get:
      tags:
        - HealthLog
      operationId: getHealthLogItem
      summary: 'Retrieves a HealthLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'HealthLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - HealthLog
      operationId: putHealthLogItem
      summary: 'Replaces the HealthLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'HealthLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/HealthLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/HealthLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/HealthLog-write'
        description: 'The updated HealthLog resource'
    delete:
      tags:
        - HealthLog
      operationId: deleteHealthLogItem
      summary: 'Removes the HealthLog resource.'
      responses:
        204:
          description: 'HealthLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/health_logs/{id}/audit_trail':
    get:
      tags:
        - HealthLog
      operationId: get_audit_trailHealthLogItem
      summary: 'Retrieves a HealthLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'HealthLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/health_logs/{id}/change_log':
    get:
      tags:
        - HealthLog
      operationId: get_change_logsHealthLogItem
      summary: 'Retrieves a HealthLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'HealthLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/HealthLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/HealthLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /installations:
    get:
      tags:
        - Installation
      operationId: getInstallationCollection
      summary: 'Retrieves the collection of Installation resources.'
      responses:
        200:
          description: 'Installation collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Installation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Installation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dbUsername]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dbPassword]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dbName]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[authorization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dbUrl]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[helmVersion]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateInstalled]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[deploymentName]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateInstalled[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInstalled[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInstalled[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInstalled[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: environment.cluster.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'environment.cluster.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: component.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'component.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Installation
      operationId: postInstallationCollection
      summary: 'Creates a Installation resource.'
      responses:
        201:
          description: 'Installation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
          links:
            GetInstallationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getInstallationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /installations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Installation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Installation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Installation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Installation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Installation-write'
        description: 'The new Installation resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/installations/{id}':
    get:
      tags:
        - Installation
      operationId: getInstallationItem
      summary: 'Retrieves a Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Installation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Installation
      operationId: putInstallationItem
      summary: 'Replaces the Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Installation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Installation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Installation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Installation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Installation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Installation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Installation-write'
        description: 'The updated Installation resource'
    delete:
      tags:
        - Installation
      operationId: deleteInstallationItem
      summary: 'Removes the Installation resource.'
      responses:
        204:
          description: 'Installation resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/installations/{id}/audit_trail':
    get:
      tags:
        - Installation
      operationId: get_audit_trailInstallationItem
      summary: 'Retrieves a Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Installation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/installations/{id}/change_log':
    get:
      tags:
        - Installation
      operationId: get_change_logsInstallationItem
      summary: 'Retrieves a Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Installation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/installations/{id}/delete':
    get:
      tags:
        - Installation
      operationId: helm_deleteInstallationItem
      summary: 'Retrieves a Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Installation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/installations/{id}/install':
    get:
      tags:
        - Installation
      operationId: helm_installInstallationItem
      summary: 'Retrieves a Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Installation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/installations/{id}/rollingupdate':
    get:
      tags:
        - Installation
      operationId: helm_updateInstallationItem
      summary: 'Retrieves a Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Installation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/installations/{id}/upgrade':
    get:
      tags:
        - Installation
      operationId: helm_upgradeInstallationItem
      summary: 'Retrieves a Installation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Installation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Installation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Installation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Installation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
components:
  schemas:
    ArrayCollection-read:
      type: object
    'ArrayCollection:jsonld-read':
      type: object
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Cluster-read:
      type: object
      description: 'This entity holds the information about a kubernetes cluster.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this cluster'
          type: string
        status:
          description: 'The status of this cluster'
          type: string
        provider:
          description: 'The cloud provider where the cluster should be'
          type: string
          nullable: true
        configurations:
          description: 'The standard applications that have been installed'
          type: array
          items:
            type: string
          nullable: true
        providerId:
          description: 'The id of this cluster with its provide e.g. digital ocean'
          type: string
        description:
          description: 'the description of this cluster'
          type: string
          nullable: true
        ip:
          description: 'the IP Address of this cluster'
          type: string
          nullable: true
        domains:
          type: array
          items:
            $ref: '#/components/schemas/Domain-read'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Environment-read'
        installations:
          readOnly: true
          description: 'The installations on this cluster'
          $ref: '#/components/schemas/ArrayCollection-read'
        health:
          readOnly: true
          description: 'The amount of installations container on this cluster that are healthy'
          type: integer
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
        dateConfigured:
          description: 'The moment this cluster was configured'
          type: string
          format: date-time
          nullable: true
        releases:
          description: 'Installed releases on this cluster'
          type: array
          items:
            type: string
          nullable: true
      required:
        - name
    Cluster-write:
      type: object
      description: 'This entity holds the information about a kubernetes cluster.'
      required:
        - name
      properties:
        name:
          description: 'The name of this cluster'
          type: string
        status:
          description: 'The status of this cluster'
          type: string
        provider:
          description: 'The cloud provider where the cluster should be'
          type: string
          nullable: true
        providerId:
          description: 'The id of this cluster with its provide e.g. digital ocean'
          type: string
        description:
          description: 'the description of this cluster'
          type: string
          nullable: true
        kubeconfig:
          description: 'the kubernetes configuration file of this cluster'
          type: string
          nullable: true
        ip:
          description: 'the IP Address of this cluster'
          type: string
          nullable: true
        token:
          description: 'the Tiller token of this cluster'
          type: string
          nullable: true
        domains:
          type: array
          items:
            $ref: '#/components/schemas/Domain-write'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Environment-write'
        dateConfigured:
          description: 'The moment this cluster was configured'
          type: string
          format: date-time
          nullable: true
        releases:
          description: 'Installed releases on this cluster'
          type: array
          items:
            type: string
          nullable: true
    'Cluster:jsonld-read':
      type: object
      description: 'This entity holds the information about a kubernetes cluster.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this cluster'
          type: string
        status:
          description: 'The status of this cluster'
          type: string
        provider:
          description: 'The cloud provider where the cluster should be'
          type: string
          nullable: true
        configurations:
          description: 'The standard applications that have been installed'
          type: array
          items:
            type: string
          nullable: true
        providerId:
          description: 'The id of this cluster with its provide e.g. digital ocean'
          type: string
        description:
          description: 'the description of this cluster'
          type: string
          nullable: true
        ip:
          description: 'the IP Address of this cluster'
          type: string
          nullable: true
        domains:
          type: array
          items:
            $ref: '#/components/schemas/Domain:jsonld-read'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Environment:jsonld-read'
        installations:
          readOnly: true
          description: 'The installations on this cluster'
          $ref: '#/components/schemas/ArrayCollection:jsonld-read'
        health:
          readOnly: true
          description: 'The amount of installations container on this cluster that are healthy'
          type: integer
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
        dateConfigured:
          description: 'The moment this cluster was configured'
          type: string
          format: date-time
          nullable: true
        releases:
          description: 'Installed releases on this cluster'
          type: array
          items:
            type: string
          nullable: true
      required:
        - name
    'Cluster:jsonld-write':
      type: object
      description: 'This entity holds the information about a kubernetes cluster.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this cluster'
          type: string
        status:
          description: 'The status of this cluster'
          type: string
        provider:
          description: 'The cloud provider where the cluster should be'
          type: string
          nullable: true
        providerId:
          description: 'The id of this cluster with its provide e.g. digital ocean'
          type: string
        description:
          description: 'the description of this cluster'
          type: string
          nullable: true
        kubeconfig:
          description: 'the kubernetes configuration file of this cluster'
          type: string
          nullable: true
        ip:
          description: 'the IP Address of this cluster'
          type: string
          nullable: true
        token:
          description: 'the Tiller token of this cluster'
          type: string
          nullable: true
        domains:
          type: array
          items:
            $ref: '#/components/schemas/Domain:jsonld-write'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Environment:jsonld-write'
        dateConfigured:
          description: 'The moment this cluster was configured'
          type: string
          format: date-time
          nullable: true
        releases:
          description: 'Installed releases on this cluster'
          type: array
          items:
            type: string
          nullable: true
    Component-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this component'
          type: string
        code:
          description: 'The unique commonground short code for this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        githubRepository:
          description: 'the Github Repository that contains this component'
          type: string
        helmRepository:
          description: 'the Helm Repository that contains this component'
          type: string
        core:
          description: 'Is the component a core component'
          type: boolean
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - code
        - githubRepository
        - helmRepository
    Component-write:
      type: object
      description: ''
      required:
        - name
        - code
        - githubRepository
        - helmRepository
      properties:
        name:
          description: 'The name of this component'
          type: string
        code:
          description: 'The unique commonground short code for this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        githubRepository:
          description: 'the Github Repository that contains this component'
          type: string
        githubToken:
          description: 'A personal access token for github that can be used to trigger actions on this component'
          type: string
          nullable: true
        helmRepository:
          description: 'the Helm Repository that contains this component'
          type: string
        core:
          description: 'Is the component a core component'
          type: boolean
        installations:
          type: array
          items:
            $ref: '#/components/schemas/Installation-write'
    'Component:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this component'
          type: string
        code:
          description: 'The unique commonground short code for this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        githubRepository:
          description: 'the Github Repository that contains this component'
          type: string
        helmRepository:
          description: 'the Helm Repository that contains this component'
          type: string
        core:
          description: 'Is the component a core component'
          type: boolean
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - code
        - githubRepository
        - helmRepository
    'Component:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - code
        - githubRepository
        - helmRepository
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this component'
          type: string
        code:
          description: 'The unique commonground short code for this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        githubRepository:
          description: 'the Github Repository that contains this component'
          type: string
        githubToken:
          description: 'A personal access token for github that can be used to trigger actions on this component'
          type: string
          nullable: true
        helmRepository:
          description: 'the Helm Repository that contains this component'
          type: string
        core:
          description: 'Is the component a core component'
          type: boolean
        installations:
          type: array
          items:
            $ref: '#/components/schemas/Installation:jsonld-write'
    Domain-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this domain'
          type: string
        description:
          description: 'the description of this domain'
          type: string
          nullable: true
        location:
          description: 'the base route of this domain'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - location
    Domain-write:
      type: object
      description: ''
      required:
        - name
        - location
      properties:
        name:
          description: 'The name of this domain'
          type: string
        description:
          description: 'the description of this domain'
          type: string
          nullable: true
        location:
          description: 'the base route of this domain'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        cluster:
          description: 'the cluster this domain is hosted on'
          $ref: '#/components/schemas/Cluster-write'
        installations:
          description: 'the installations in this domain'
          type: array
          items:
            $ref: '#/components/schemas/Installation-write'
        healthLogs:
          description: 'the HealthLogs related to this domain'
          type: array
          items:
            $ref: '#/components/schemas/HealthLog-write'
    'Domain:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this domain'
          type: string
        description:
          description: 'the description of this domain'
          type: string
          nullable: true
        location:
          description: 'the base route of this domain'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - location
    'Domain:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - location
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this domain'
          type: string
        description:
          description: 'the description of this domain'
          type: string
          nullable: true
        location:
          description: 'the base route of this domain'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        cluster:
          description: 'the cluster this domain is hosted on'
          $ref: '#/components/schemas/Cluster:jsonld-write'
        installations:
          description: 'the installations in this domain'
          type: array
          items:
            $ref: '#/components/schemas/Installation:jsonld-write'
        healthLogs:
          description: 'the HealthLogs related to this domain'
          type: array
          items:
            $ref: '#/components/schemas/HealthLog:jsonld-write'
    Environment-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        debug:
          description: 'Whether the components in this environment should run with debugging on or off.'
          type: integer
        cache:
          description: 'Whether the components in this environment should run with caching on or off.'
          type: integer
        web:
          description: 'Whether the components in this environment should run with an exposed backend or not.'
          type: integer
          nullable: true
        cluster:
          $ref: '#/components/schemas/Cluster-read'
        installations:
          description: 'The installations in this environment'
          type: array
          items:
            $ref: '#/components/schemas/Installation-read'
        health:
          readOnly: true
          description: 'The amount of installations container on this cluster that are healthy'
          type: integer
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - debug
        - cache
    Environment-write:
      type: object
      description: ''
      required:
        - name
        - debug
        - cache
        - authorization
      properties:
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        debug:
          description: 'Whether the components in this environment should run with debugging on or off.'
          type: integer
        cache:
          description: 'Whether the components in this environment should run with caching on or off.'
          type: integer
        web:
          description: 'Whether the components in this environment should run with an exposed backend or not.'
          type: integer
          nullable: true
        authorization:
          description: 'The authentication token that is needed to access this token'
          type: string
          nullable: true
        cluster:
          $ref: '#/components/schemas/Cluster-write'
        installations:
          description: 'The installations in this environment'
          type: array
          items:
            $ref: '#/components/schemas/Installation-write'
    'Environment:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        debug:
          description: 'Whether the components in this environment should run with debugging on or off.'
          type: integer
        cache:
          description: 'Whether the components in this environment should run with caching on or off.'
          type: integer
        web:
          description: 'Whether the components in this environment should run with an exposed backend or not.'
          type: integer
          nullable: true
        cluster:
          $ref: '#/components/schemas/Cluster:jsonld-read'
        installations:
          description: 'The installations in this environment'
          type: array
          items:
            $ref: '#/components/schemas/Installation:jsonld-read'
        health:
          readOnly: true
          description: 'The amount of installations container on this cluster that are healthy'
          type: integer
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - debug
        - cache
    'Environment:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - debug
        - cache
        - authorization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        debug:
          description: 'Whether the components in this environment should run with debugging on or off.'
          type: integer
        cache:
          description: 'Whether the components in this environment should run with caching on or off.'
          type: integer
        web:
          description: 'Whether the components in this environment should run with an exposed backend or not.'
          type: integer
          nullable: true
        authorization:
          description: 'The authentication token that is needed to access this token'
          type: string
          nullable: true
        cluster:
          $ref: '#/components/schemas/Cluster:jsonld-write'
        installations:
          description: 'The installations in this environment'
          type: array
          items:
            $ref: '#/components/schemas/Installation:jsonld-write'
    HealthLog-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        status:
          description: 'The status of the checked resource'
          type: string
        code:
          description: 'The status code of the checked resource'
          type: integer
        domain:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain-read'
        installation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Installation-read'
        endpoint:
          description: 'The endpoint that was checked'
          type: string
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
    HealthLog-write:
      type: object
      description: ''
      properties:
        domain:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain-write'
        installation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Installation-write'
    'HealthLog:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        status:
          description: 'The status of the checked resource'
          type: string
        code:
          description: 'The status code of the checked resource'
          type: integer
        domain:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain:jsonld-read'
        installation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Installation:jsonld-read'
        endpoint:
          description: 'The endpoint that was checked'
          type: string
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
    'HealthLog:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        domain:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain:jsonld-write'
        installation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Installation:jsonld-write'
    Installation-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        status:
          readOnly: true
          description: 'The status of this installation'
          type: string
        dbUsername:
          description: 'The username that is needed to log into the cluster database'
          type: string
          nullable: true
        dbName:
          description: 'The name of the database this component uses'
          type: string
          nullable: true
        helmVersion:
          description: 'the helm version of the helm instalaltion files'
          type: string
        component:
          description: 'the component that this installation contains'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Component-read'
        domain:
          description: 'the domain under which the installation is installed'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain-read'
        environment:
          description: 'the environment the installation is installed in'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Environment-read'
        dateInstalled:
          description: 'The moment this installation was last installed'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
        properties:
          description: 'additional properties that are required for this installation, i.e. external API keys'
          type: array
          items:
            $ref: '#/components/schemas/Property-read'
        deploymentName:
          description: 'The name of the deployment on the kubernetes cluster'
          type: string
          nullable: true
      required:
        - name
    Installation-write:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        dbUsername:
          description: 'The username that is needed to log into the cluster database'
          type: string
          nullable: true
        dbPassword:
          description: 'The password that is needed to log into the cluster database'
          type: string
          nullable: true
        dbName:
          description: 'The name of the database this component uses'
          type: string
          nullable: true
        authorization:
          description: 'The authorization token that is needed to access this token'
          type: string
          nullable: true
        dbUrl:
          description: 'The database url for this installation'
          type: string
          nullable: true
        helmVersion:
          description: 'the helm version of the helm instalaltion files'
          type: string
        component:
          description: 'the component that this installation contains'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Component-write'
        domain:
          description: 'the domain under which the installation is installed'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain-write'
        environment:
          description: 'the environment the installation is installed in'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Environment-write'
        healthLogs:
          description: 'the Health logs for this installation'
          type: array
          items:
            $ref: '#/components/schemas/HealthLog-write'
        dateInstalled:
          description: 'The moment this installation was last installed'
          type: string
          format: date-time
          nullable: true
        properties:
          description: 'additional properties that are required for this installation, i.e. external API keys'
          type: array
          items:
            $ref: '#/components/schemas/Property-write'
        deploymentName:
          description: 'The name of the deployment on the kubernetes cluster'
          type: string
          nullable: true
    'Installation:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        status:
          readOnly: true
          description: 'The status of this installation'
          type: string
        dbUsername:
          description: 'The username that is needed to log into the cluster database'
          type: string
          nullable: true
        dbName:
          description: 'The name of the database this component uses'
          type: string
          nullable: true
        helmVersion:
          description: 'the helm version of the helm instalaltion files'
          type: string
        component:
          description: 'the component that this installation contains'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Component:jsonld-read'
        domain:
          description: 'the domain under which the installation is installed'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain:jsonld-read'
        environment:
          description: 'the environment the installation is installed in'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Environment:jsonld-read'
        dateInstalled:
          description: 'The moment this installation was last installed'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this entity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this entity last Modified'
          type: string
          format: date-time
          nullable: true
        properties:
          description: 'additional properties that are required for this installation, i.e. external API keys'
          type: array
          items:
            $ref: '#/components/schemas/Property:jsonld-read'
        deploymentName:
          description: 'The name of the deployment on the kubernetes cluster'
          type: string
          nullable: true
      required:
        - name
    'Installation:jsonld-write':
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this component'
          type: string
        description:
          description: 'the description of this component'
          type: string
          nullable: true
        dbUsername:
          description: 'The username that is needed to log into the cluster database'
          type: string
          nullable: true
        dbPassword:
          description: 'The password that is needed to log into the cluster database'
          type: string
          nullable: true
        dbName:
          description: 'The name of the database this component uses'
          type: string
          nullable: true
        authorization:
          description: 'The authorization token that is needed to access this token'
          type: string
          nullable: true
        dbUrl:
          description: 'The database url for this installation'
          type: string
          nullable: true
        helmVersion:
          description: 'the helm version of the helm instalaltion files'
          type: string
        component:
          description: 'the component that this installation contains'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Component:jsonld-write'
        domain:
          description: 'the domain under which the installation is installed'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Domain:jsonld-write'
        environment:
          description: 'the environment the installation is installed in'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Environment:jsonld-write'
        healthLogs:
          description: 'the Health logs for this installation'
          type: array
          items:
            $ref: '#/components/schemas/HealthLog:jsonld-write'
        dateInstalled:
          description: 'The moment this installation was last installed'
          type: string
          format: date-time
          nullable: true
        properties:
          description: 'additional properties that are required for this installation, i.e. external API keys'
          type: array
          items:
            $ref: '#/components/schemas/Property:jsonld-write'
        deploymentName:
          description: 'The name of the deployment on the kubernetes cluster'
          type: string
          nullable: true
    Property-read:
      type: object
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'the name of the property'
          type: string
        value:
          description: 'the value of the property'
          type: string
    Property-write:
      type: object
      properties:
        name:
          description: 'the name of the property'
          type: string
        value:
          description: 'the value of the property'
          type: string
    'Property:jsonld-read':
      type: object
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'the name of the property'
          type: string
        value:
          description: 'the value of the property'
          type: string
    'Property:jsonld-write':
      type: object
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'the name of the property'
          type: string
        value:
          description: 'the value of the property'
          type: string
definitions:
  Cluster-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this cluster'
        type: string
        example: 'conduction cluster'
        maxLength: 255
      status:
        description: 'The status of this cluster'
        type: string
        example: running
        maxLength: 255
      provider:
        description: 'The cloud provider where the cluster should be'
        type: string
        example: running
      configurations:
        description: 'The standard applications that have been installed'
        type: array
      providerId:
        description: 'The id of this cluster with its provide e.g. digital ocean'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        maxLength: 255
      description:
        description: 'the description of this cluster'
        type: string
        example: 'This cluster is for conduction''s own systems'
      ip:
        description: 'the IP Address of this cluster'
        type: string
        example: 255.255.255.0
      dateCreated:
        description: 'The moment this entity was created'
        type: \Datetime
      dateModified:
        description: 'The moment this entity last Modified'
        type: \Datetime
      dateConfigured:
        description: 'The moment this cluster was configured'
        type: \Datetime
      releases:
        description: 'Installed releases on this cluster'
        type: array
      domains: []
      environments: []
    required:
      - name
  Cluster-write:
    properties:
      name:
        description: 'The name of this cluster'
        type: string
        example: 'conduction cluster'
        maxLength: 255
      status:
        description: 'The status of this cluster'
        type: string
        example: running
        maxLength: 255
      provider:
        description: 'The cloud provider where the cluster should be'
        type: string
        example: running
      providerId:
        description: 'The id of this cluster with its provide e.g. digital ocean'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        maxLength: 255
      description:
        description: 'the description of this cluster'
        type: string
        example: 'This cluster is for conduction''s own systems'
      kubeconfig:
        description: 'the kubernetes configuration file of this cluster'
        type: string
      ip:
        description: 'the IP Address of this cluster'
        type: string
        example: 255.255.255.0
      token:
        description: 'the Tiller token of this cluster'
        type: string
      dateConfigured:
        description: 'The moment this cluster was configured'
        type: \Datetime
      releases:
        description: 'Installed releases on this cluster'
        type: array
      domains: []
      environments: []
    required:
      - name
  Component-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this component'
        type: string
        example: 'environment component'
        maxLength: 255
      code:
        description: 'The unique commonground short code for this component'
        type: string
        example: evc
        maxLength: 255
      description:
        description: 'the description of this component'
        type: string
        example: 'This common ground component describes common ground components'
      githubRepository:
        description: 'the Github Repository that contains this component'
        type: string
        example: 'https://github.com/ConductionNL/environment-component'
        maxLength: 255
      helmRepository:
        description: 'the Helm Repository that contains this component'
        type: string
        example: 'https://github.com/ConductionNL/environment-component/api/helm'
        maxLength: 255
      core:
        description: 'Is the component a core component'
        type: bool
      dateCreated:
        description: 'The moment this entity was created'
        type: \Datetime
      dateModified:
        description: 'The moment this entity last Modified'
        type: \Datetime
    required:
      - name
      - code
      - githubRepository
      - helmRepository
  Component-write:
    properties:
      name:
        description: 'The name of this component'
        type: string
        example: 'environment component'
        maxLength: 255
      code:
        description: 'The unique commonground short code for this component'
        type: string
        example: evc
        maxLength: 255
      description:
        description: 'the description of this component'
        type: string
        example: 'This common ground component describes common ground components'
      githubRepository:
        description: 'the Github Repository that contains this component'
        type: string
        example: 'https://github.com/ConductionNL/environment-component'
        maxLength: 255
      githubToken:
        description: 'A personal access token for github that can be used to trigger actions on this component'
        type: string
        maxLength: 255
      helmRepository:
        description: 'the Helm Repository that contains this component'
        type: string
        example: 'https://github.com/ConductionNL/environment-component/api/helm'
        maxLength: 255
      core:
        description: 'Is the component a core component'
        type: bool
      installations: []
    required:
      - name
      - code
      - githubRepository
      - helmRepository
  Domain-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this domain'
        type: string
        example: conduction.nl
        maxLength: 255
      description:
        description: 'the description of this domain'
        type: string
        example: 'This domain contains the conduction website'
      location:
        description: 'the base route of this domain'
        type: string
        example: conduction.nl
        format: url
        maxLength: 255
      dateCreated:
        description: 'The moment this entity was created'
        type: \Datetime
      dateModified:
        description: 'The moment this entity last Modified'
        type: \Datetime
    required:
      - name
      - location
  Domain-write:
    properties:
      name:
        description: 'The name of this domain'
        type: string
        example: conduction.nl
        maxLength: 255
      description:
        description: 'the description of this domain'
        type: string
        example: 'This domain contains the conduction website'
      location:
        description: 'the base route of this domain'
        type: string
        example: conduction.nl
        format: url
        maxLength: 255
      cluster:
        description: 'the cluster this domain is hosted on'
        type: \Cluster
      installations:
        description: 'the installations in this domain'
        type: \ArrayCollection
      healthLogs:
        description: 'the HealthLogs related to this domain'
        type: \ArrayCollection
    required:
      - name
      - location
  Environment-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this component'
        type: string
        example: evc
        maxLength: 255
      description:
        description: 'the description of this component'
        type: string
        example: 'This common ground component describes common ground components'
      debug:
        description: 'Whether the components in this environment should run with debugging on or off.'
        type: int
        example: '1'
      cache:
        description: 'Whether the components in this environment should run with caching on or off.'
        type: int
        example: '1'
      web:
        description: 'Whether the components in this environment should run with an exposed backend or not.'
        type: int
        example: '1'
      dateCreated:
        description: 'The moment this entity was created'
        type: \Datetime
      dateModified:
        description: 'The moment this entity last Modified'
        type: \Datetime
      cluster: []
      installations:
        description: 'The installations in this environment'
        type: \ArrayCollection
    required:
      - name
      - debug
      - cache
      - authorization
  Environment-write:
    properties:
      name:
        description: 'The name of this component'
        type: string
        example: evc
        maxLength: 255
      description:
        description: 'the description of this component'
        type: string
        example: 'This common ground component describes common ground components'
      debug:
        description: 'Whether the components in this environment should run with debugging on or off.'
        type: int
        example: '1'
      cache:
        description: 'Whether the components in this environment should run with caching on or off.'
        type: int
        example: '1'
      web:
        description: 'Whether the components in this environment should run with an exposed backend or not.'
        type: int
        example: '1'
      authorization:
        description: 'The authentication token that is needed to access this token'
        type: string
        example: evc-dev
        maxLength: 255
      cluster: []
      installations:
        description: 'The installations in this environment'
        type: \ArrayCollection
    required:
      - name
      - debug
      - cache
      - authorization
  HealthLog-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      status:
        description: 'The status of the checked resource'
        type: string
        example: OK
      code:
        description: 'The status code of the checked resource'
        type: int
        example: OK
      endpoint:
        description: 'The endpoint that was checked'
        type: string
        example: 'https://www.zuid-drecht.nl'
      dateCreated:
        description: 'The moment this entity was created'
        type: \Datetime
      dateModified:
        description: 'The moment this entity last Modified'
        type: \Datetime
      domain: []
      installation: []
    required: []
  HealthLog-write:
    properties:
      domain: []
      installation: []
    required: []
  Installation-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this component'
        type: string
        example: evc
        maxLength: 255
      description:
        description: 'the description of this component'
        type: string
        example: 'This common ground component describes common ground components'
      dbUsername:
        description: 'The username that is needed to log into the cluster database'
        type: string
        example: evc-dev
        maxLength: 255
      dbName:
        description: 'The name of the database this component uses'
        type: string
        maxLength: 255
      helmVersion:
        description: 'the helm version of the helm instalaltion files'
        type: string
        example: 'https://github.com/ConductionNL/environment-component'
        maxLength: 255
      dateInstalled:
        description: 'The moment this installation was last installed'
        type: \Datetime
      dateCreated:
        description: 'The moment this entity was created'
        type: \Datetime
      dateModified:
        description: 'The moment this entity last Modified'
        type: \Datetime
      deploymentName:
        description: 'The name of the deployment on the kubernetes cluster'
        type: string
        example: pc-dev
      component:
        description: 'the component that this installation contains'
        type: \Component
      domain:
        description: 'the domain under which the installation is installed'
        type: \Domain
      environment:
        description: 'the environment the installation is installed in'
        type: \Environment
      properties:
        description: 'additional properties that are required for this installation, i.e. external API keys'
        type: \Property
    required:
      - name
  Installation-write:
    properties:
      name:
        description: 'The name of this component'
        type: string
        example: evc
        maxLength: 255
      description:
        description: 'the description of this component'
        type: string
        example: 'This common ground component describes common ground components'
      dbUsername:
        description: 'The username that is needed to log into the cluster database'
        type: string
        example: evc-dev
        maxLength: 255
      dbPassword:
        description: 'The password that is needed to log into the cluster database'
        type: string
        maxLength: 255
      dbName:
        description: 'The name of the database this component uses'
        type: string
        maxLength: 255
      authorization:
        description: 'The authorization token that is needed to access this token'
        type: string
        example: evc-dev
        maxLength: 255
      dbUrl:
        description: 'The database url for this installation'
        type: string
        example: 'https://github.com/ConductionNL/environment-component'
        maxLength: 255
      helmVersion:
        description: 'the helm version of the helm instalaltion files'
        type: string
        example: 'https://github.com/ConductionNL/environment-component'
        maxLength: 255
      dateInstalled:
        description: 'The moment this installation was last installed'
        type: \Datetime
      deploymentName:
        description: 'The name of the deployment on the kubernetes cluster'
        type: string
        example: pc-dev
      component:
        description: 'the component that this installation contains'
        type: \Component
      domain:
        description: 'the domain under which the installation is installed'
        type: \Domain
      environment:
        description: 'the environment the installation is installed in'
        type: \Environment
      healthLogs:
        description: 'the Health logs for this installation'
        type: \ArrayCollection
      properties:
        description: 'additional properties that are required for this installation, i.e. external API keys'
        type: \Property
    required:
      - name
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-07-15 09:06:35'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-07-15 09:06:35'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-07-15 09:06:35'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-07-15 09:06:35'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Cluster
    description: |
      This entity holds the information about a kubernetes cluster.
      
      
  -
    name: Component
    description: |
      
      
      
  -
    name: Domain
    description: |
      
      
      
  -
    name: Environment
    description: |
      
      
      
  -
    name: HealthLog
    description: |
      
      
      
  -
    name: Installation
    description: |
      
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: conduction.nl
    url: evc.dev.conduction.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
